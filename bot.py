import asyncio
import logging
import os
import sys

# –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
lock_file = "bot.lock"

if os.path.exists(lock_file):
    print("‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å.")
    sys.exit(1)

with open(lock_file, 'w') as f:
    f.write(str(os.getpid()))

import atexit
atexit.register(lambda: os.remove(lock_file))

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_DIR = "logs"
os.makedirs(LOG_DIR, exist_ok=True)

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, "bot.log"), encoding="utf-8"),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger("TelegramBot")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler
from handlers.menu import start_menu, button_handler

async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    try:
        from config import TELEGRAM_CONFIG
        app = ApplicationBuilder().token(TELEGRAM_CONFIG['token']).build()
        app.add_handler(CommandHandler("start", start_menu))
        app.add_handler(CallbackQueryHandler(button_handler))
        logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        await app.run_polling()
    except Exception as e:
        logger.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", exc_info=True)

if __name__ == "__main__":
    asyncio.run(main())